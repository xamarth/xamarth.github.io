const cfConfig = {
    cssBase:
        getElemById("contactform").src.split("/src")[0] ||
        "https://cdn.jsdelivr.net/gh/",
    error: {
        title: "Error",
        message:
            getElemById("contactform").getAttribute("error_text") ||
            "Sorry, an error occurred while receiving your message, Try to contact with me in another method."
    },
    success: {
        title: "Message Sent",
        message:
            getElemById("contactform").getAttribute("success_text") ||
            "Thank you for contacting me, I will get back to you soon."
    }
},
    cfbody =
        '\n<div class="box right-button" id="cf" style="display: inline-block; z-index: 9999;">\n\t<div class="button color" onclick="cfClick();"><span class="m-cf-icon-default"><i class="material-icons">email</i></span><span class="icon"><i class="material-icons">close</i></span></div>\n\t<div class="panel" id="cfcontent"></div>\n</div>\n',
    cfform =
        '\n<h3 class="title">Contact</h3>\n<p>Send me a message I will contact with you soon.</p>\n<div>\n\t<input class="element" onchange="cfonChange(\'cfname\')" id="cfname" type="text" name="name" placeholder="Name" autocomplete="off">\n\t<input class="element" onchange="cfonChange(\'cfemail\')" id="cfemail" type="text" name="email" placeholder="Email" autocomplete="off">\n\t<input class="element" onchange="cfonChange(\'cfphone\')" id="cfphone" type="number" name="phoneno" placeholder="Phone No" autocomplete="off">\n\t<input class="element" onchange="cfonChange(\'cfsubject\')" id="cfsubject" type="text" name="subject" placeholder="Subject" autocomplete="off">\n\t<textarea class="element" onchange="cfonChange(\'cfmessage\')" id="cfmessage" name="message" placeholder="Your message"></textarea>\n\t<button id="cfbutton" onclick="cfSubmitMessage()" class="form-button color">Send your message</button><a href="https://github.com/xamarth" class="cfpromo">Powered by Contact Form</a>\n</div>\n';
function cfClick() {
    getElemById("cf").classList.toggle("showing-state"),
        getElemById("cf").classList.toggle("showing");
}
async function cfSubmitMessage() {
    var cfvalue = {
        name: getElemById("cfname").value,
        email: getElemById("cfemail").value.toLowerCase(),
        phone_no: getElemById("cfphone").value,
        subject: getElemById("cfsubject").value,
        message: getElemById("cfmessage").value
    };
    let emailRegex = /^([a-zA-Z0-9_\-\.]+)@([a-zA-Z0-9_\-\.]+)\.([a-zA-Z]{2,5})$/;
    if ("" === cfvalue.name) getElemById("cfname").classList.add("error");
    else if (emailRegex.test(cfvalue.email))
        if ("" === cfvalue.phone_no) getElemById("cfphone").classList.add("error");
        else if ("" === cfvalue.subject)
            getElemById("cfsubject").classList.add("error");
        else if ("" === cfvalue.message)
            getElemById("cfmessage").classList.add("error");
        else {
            getElemById("cfbutton").removeAttribute("onclick"),
                getElemById("cfbutton").classList.remove("color"),
                getElemById("cfbutton").classList.add("onclick"),
                (getElemById("cfbutton").innerHTML = "Sending...");
            try {
                var sendmessage;
                if (
                    !(
                        await (
                            await fetch(
                                document
                                    .getElementById("contactform")
                                    .getAttribute("form_worker_url"),
                                { method: "POST", body: JSON.stringify(cfvalue) }
                            )
                        ).json()
                    ).status
                )
                    throw new Error("Error");
                (getElemById("cfcontent").innerHTML = createHtmlFromObj(
                    cfConfig.success
                )),
                    localStorage.setItem(
                        "contact-form",
                        JSON.stringify({
                            sent: !0,
                            canSendUnix: new Date().getTime() + 432e5
                        })
                    );
            } catch (error) {
                console.log(error),
                    (getElemById("cfcontent").innerHTML = createHtmlFromObj(
                        cfConfig.error
                    ));
            }
        }
    else getElemById("cfemail").classList.add("error");
}
function cfonChange(id) {
    getElemById(id).classList.remove("error");
}
function getElemById(id) {
    return document.getElementById(id);
}
function createHtmlFromObj({ title: title, message: message }) {
    return `<h3 class="title">${title}</h3><p>${message}</p>`;
}
window.onload = () => {
    var cfstylesheet = document.createElement("link");
    (cfstylesheet.rel = "stylesheet"),
        (cfstylesheet.href = `${cfConfig.cssBase}/src/style.min.css`),
        document.getElementsByTagName("head")[0].appendChild(cfstylesheet),
        (cfstylesheet.onload = function () {
            var cfdiv = document.createElement("section");
            cfdiv.classList.add("contact-form-cf"),
                (cfdiv.innerHTML = cfbody),
                document.getElementsByTagName("body")[0].appendChild(cfdiv);
            var cfresult = JSON.parse(localStorage.getItem("contact-form"));
            "true" !== getElemById("contactform").getAttribute("disable_waittime") &&
                cfresult &&
                cfresult.sent &&
                cfresult.canSendUnix > new Date().getTime()
                ? (getElemById("cfcontent").innerHTML = createHtmlFromObj(
                    cfConfig.success
                ))
                : (getElemById("cfcontent").innerHTML = cfform);
        });
};
